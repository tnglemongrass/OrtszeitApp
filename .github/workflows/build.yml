name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-desktop:
    name: Build Desktop
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xorg-dev gcc libgl1-mesa-dev xorg-dev gcc-mingw-w64 gcc-multilib
        
    # - name: Install OSXCross for macOS cross-compilation
    #   run: |
    #     mkdir -p /tmp/osxcross
    #     cd /tmp/osxcross
    #     wget -q https://github.com/tpoechtrager/osxcross/archive/master.zip
    #     unzip -q master.zip
    #     cd osxcross-master
    #     wget -q https://github.com/joseluisq/macosx-sdks/releases/download/12.3/MacOSX12.3.sdk.tar.xz
    #     mv MacOSX12.3.sdk.tar.xz tarballs/
    #     UNATTENDED=1 ./build.sh
    #     echo "PATH=/tmp/osxcross/osxcross-master/target/bin:$PATH" >> $GITHUB_ENV

    - name: Install Fyne
      run: |
        go install fyne.io/fyne/v2/cmd/fyne@latest

    # Build for Linux
    - name: Build Linux CLI
      run: |
        cd cmd
        GOOS=linux GOARCH=amd64 go build -v -o ortszeit-cli cli.go

    - name: Prepare Icon
      run: |
        cp assets/icons/sun.png gui/Icon.png

    - name: Build Linux GUI
      run: |
        cd gui
        fyne package -os linux -executable Ortszeit-linux main.go

    # Build for Windows
    - name: Build Windows CLI
      run: |
        cd cmd
        GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc go build -v -o ortszeit-cli.exe cli.go

    - name: Build Windows GUI
      run: |
        cd gui
        fyne package -os windows -executable Ortszeit-windows.exe main.go

    # # Build for macOS
    # - name: Build macOS CLI
    #   run: |
    #     cd cmd
    #     GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 CC=o64-clang go build -v -o ortszeit-cli-mac cli.go

    # - name: Build macOS GUI
    #   run: |
    #     cd gui
    #     fyne package -os darwin -executable Ortszeit-macos main.go

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ortszeit-linux
        path: |
          cmd/ortszeit-cli
          gui/Ortszeit-linux

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ortszeit-windows
        path: |
          cmd/ortszeit-cli.exe
          gui/Ortszeit-windows.exe

    # - name: Upload macOS artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ortszeit-macos
    #     path: |
    #       cmd/ortszeit-cli-mac
    #       gui/Ortszeit-macos.app

  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install NDK
      run: |
        sdkmanager --install "ndk;25.2.9519653"
        echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

    - name: Install Fyne
      run: |
        go install fyne.io/fyne/v2/cmd/fyne@latest

    - name: Build Android APK
      run: |
        cd gui
        cp ../assets/icons/sun.png Icon.png
        fyne package -os android -appID com.example.ortszeitapp -name Ortszeit-android main.go

    - name: Upload Android artifact
      uses: actions/upload-artifact@v4
      with:
        name: ortszeit-android
        path: gui/Ortszeit-android.apk
